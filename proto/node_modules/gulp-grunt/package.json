{
  "name": "gulp-grunt",
  "description": "Run grunt tasks from gulp",
  "version": "0.5.1",
  "homepage": "http://github.com/gratimax/gulp-grunt",
  "repository": {
    "type": "git",
    "url": "git://github.com/gratimax/gulp-grunt.git"
  },
  "author": {
    "name": "gratimax",
    "email": "max@ovsankin.com"
  },
  "main": "./index.js",
  "keywords": [
    "gulpfriendly",
    "grunt"
  ],
  "devDependencies": {
    "mocha": "~1.16",
    "chai": "~1.8",
    "grunt": "~0.4",
    "gulp": "~3.2"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://raw.github.com/gratimax/gulp-grunt/master/LICENSE"
    }
  ],
  "readme": "# [gulp](https://github.com/gulpjs/gulp)-grunt\r\n<img align=\"right\" height=\"300\" src=\"http://i.imgur.com/05jWZVG.png\">\r\n\r\n#### Run grunt tasks from gulp\r\n[![NPM version](https://badge.fury.io/js/gulp-grunt.png)](https://npmjs.org/package/gulp-grunt)\r\n[![travis build](https://api.travis-ci.org/gratimax/gulp-grunt.png)](https://travis-ci.org/gratimax/gulp-grunt)\r\n[![dependencies](https://david-dm.org/gratimax/gulp-grunt.png)](https://david-dm.org/gratimax/gulp-grunt)\r\n\r\nWhat if your favorite grunt plugin isn't available for gulp yet?\r\nDon't fret, there is nothing to worry about!\r\nWhy don't you just hook in your grunt configuration?\r\n\r\nThis plugin is a bit different from most other gulp plugins.\r\nYou cannot use it inline, because it does not create a stream.\r\nRather, use it at the top of your gulpfile, calling it with your gulp as an argument.\r\nThis classifies gulp-grunt as _gulpfriendly_, not a gulpplugin.\r\n\r\n## Example usage\r\n```js\r\nvar gulp = require('gulp');\r\nrequire('gulp-grunt')(gulp); // add all the gruntfile tasks to gulp\r\n\r\n// continue defining tasks...\r\ngulp.task('do-this', function() {\r\n    ...\r\n});\r\n\r\n// run them like any other task\r\ngulp.task('default', function() {\r\n    // run complete grunt tasks\r\n    gulp.run('grunt-minify');\r\n    gulp.run('grunt-test');\r\n    // or run specific targets\r\n    gulp.run('grunt-sass:dist');\r\n    gulp.run('grunt-browserify:dev');\r\n});\r\n```\r\nNote that all the grunt tasks that were added begin with the prefix 'grunt-'.\r\nThis is for usability, so that your grunt tasks do not clash with your gulp tasks.\r\nAlso note that `require('gulp-grunt')(gulp)` does not have to be at the top of your file.\r\nIt could very well be at the bottom, except that then it could possibly overwrite some of your\r\ngulp tasks.\r\n\r\nTo run specific targets, use the regular grunt syntax `[task]:[target]`, as in the example above. (To learn more about Grunt targets, check out [the Grunt documentation](http://gruntjs.com/configuring-tasks#task-configuration-and-targets).)\r\n\r\n## Functions\r\n\r\n### gulp-grunt()\r\n__Takes__ `(gulp, options)`\r\n\r\nConfiguration is done with the function call:\r\n```js\r\nrequire('gulp-grunt')(gulp, {\r\n    base: ...,\r\n    prefix: ...\r\n});\r\n```\r\nThis function appends all the grunt tasks it has found to your gulp object as normal gulp tasks.\r\n\r\n#### gulp\r\nYour gulp object that you imported with the code:\r\n```js\r\nvar gulp = require('gulp');\r\n```\r\nPass it in and gulp-grunt will add all the tasks.\r\n\r\n#### options\r\n`options` is the configuration object you pass in.\r\n\r\n#### options.base\r\nThis tells grunt where to look for your gruntfile.\r\nSet it to some absolute path.\r\nThis may require you to use `path.join` for relative paths:\r\n```js\r\nrequire('gulp-grunt')(gulp, {\r\n    base: require('path').join(__dirname, 'yourrelativepathhere')\r\n});\r\n```\r\n\r\n#### options.prefix\r\nThis tells gulp-grunt how to prefix your tasks.\r\nFor instance, if in the gruntfile you define the tasks 'minify' and 'compile',\r\nand if you pass gulp-grunt this configuration:\r\n```js\r\nrequire('gulp-grunt')(gulp, {\r\n    prefix: 'theknightswhosay-'\r\n})\r\n```\r\nThe grunt tasks can be called from gulp, except they would have the prefix, so\r\n'theknightswhosay-minify' and 'theknightswhosay-compile'.\r\n\r\nYou can simply pass in an empty string(`''`) if you wish to have no prefix.\r\n\r\n#### options.verbose\r\nIf this option is enabled(true), then gulp-grunt will tell you when it starts running a Grunt task or stops it.\r\nThis option is mainly for debugging.\r\n\r\n#### default options\r\n\r\n```js\r\n{\r\n    base: null, // this is just the directory that your Gulpfile is in\r\n    prefix: 'grunt-',\r\n    verbose: false\r\n}\r\n```\r\n\r\n### gulp-grunt.tasks()\r\n__Takes__ `(options)`\r\n\r\nThis just returns all the grunt tasks found, along with their associated functions.\r\nCalling is essentially the same as with the main function:\r\n```js\r\nvar gulp_grunt = require('gulp-grunt')\r\nvar tasks = gulp_grunt.tasks({\r\n    base: ...,\r\n    prefix: ...\r\n});\r\n```\r\nOutput is something like:\r\n```js\r\n{\r\n    'grunt-test': [Function],\r\n    'grunt-minify': [Function]\r\n    // etc...\r\n}\r\n```\r\n\r\n#### options\r\nThis object is the exact same as for [gulp-grunt()](#gulp-grunt-1) above.\r\nThis tells gulp-grunt what prefix to use and what base to search for, among other things.\r\n\r\n***\r\n\r\nHave fun grunting and gulping! :D\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gratimax/gulp-grunt/issues"
  },
  "_id": "gulp-grunt@0.5.1",
  "_shasum": "3be9d979bc8f31e68749230fb63a28fd5b2c0642",
  "_from": "gulp-grunt@^0.5.1",
  "_resolved": "https://registry.npmjs.org/gulp-grunt/-/gulp-grunt-0.5.1.tgz"
}
