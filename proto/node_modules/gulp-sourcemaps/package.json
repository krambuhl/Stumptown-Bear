{
  "name": "gulp-sourcemaps",
  "version": "0.2.1",
  "description": "Source map support for Gulp.js",
  "homepage": "http://github.com/floridoo/gulp-sourcemaps",
  "repository": {
    "type": "git",
    "url": "git://github.com/floridoo/gulp-sourcemaps.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "gulp",
    "sourcemap"
  ],
  "author": {
    "name": "Florian Reiterer",
    "email": "me@florianreiterer.com"
  },
  "license": "ISC",
  "dependencies": {
    "gulp-util": "^2.2.14",
    "through2": "^0.4.1",
    "source-map": "^0.1.33"
  },
  "readme": "## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-sourcemaps</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Source map support for Gulp</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>â‰¥ 0.9</td>\n</tr>\n</table>\n\n## Usage\n\n```javascript\nvar gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      .pipe(concat('all.js'))\n      .pipe(uglify())\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('dist'));\n});\n```\n\nAll plugin between `sourcemaps.init()` and `sourcemaps.write()` need to support source maps.\n\n\n## Options\n\n- `inline`\n\n  By default the source maps are inlined. Pass `false` to write separate files.\n\n- `includeContent`\n\n  By default the source maps include the source code. Pass `false` to use the original files.\n\n- `sourceRoot`\n\n  Set the path where the source files are hosted (use this when `includeContent` is set to `false`).\n\n## Plugin developers only: How to add source map support to plugins\n\n- Generate a source map for the transformation the plugin is applying\n- Apply this source map to the vinyl `file` by calling `file.applySourceMap(sourceMap)`.\n  This combines the source map of this plugin with the source maps coming from plugins further up the chain.\n\n### Example:\n\n```javascript\nvar through = require('through2');\nvar myTransform = require('myTransform');\n\nmodule.exports = function(options) {\n\n  function transform(file, encoding, callback) {\n    // generate source maps if plugin source-map present\n    if (file.sourceMap) {\n      options.makeSourceMaps = true;\n    }\n\n    // do normal plugin logic\n    var result = myTransform(file.contents, options);\n    file.contents = new Buffer(result.code);\n\n    // apply source map to the chain\n    if (file.sourceMap) {\n      file.applySourceMap(result.map);\n    }\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(transform);\n};\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/floridoo/gulp-sourcemaps/issues"
  },
  "_id": "gulp-sourcemaps@0.2.1",
  "_shasum": "278b28ced6d6c73ec17124613f67be8500def160",
  "_from": "gulp-sourcemaps@~0.2.1",
  "_resolved": "https://registry.npmjs.org/gulp-sourcemaps/-/gulp-sourcemaps-0.2.1.tgz"
}
